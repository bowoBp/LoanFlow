// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	context "context"

	domians "github.com/bowoBp/LoanFlow/internal/domain"
	loan "github.com/bowoBp/LoanFlow/internal/services/loan"

	mock "github.com/stretchr/testify/mock"
)

// DefaultLoanTransactionInterface is an autogenerated mock type for the DefaultLoanTransactionInterface type
type DefaultLoanTransactionInterface struct {
	mock.Mock
}

// ApproveDetail provides a mock function with given fields: ctx, detail
func (_m *DefaultLoanTransactionInterface) ApproveDetail(ctx context.Context, detail *domians.LoanApprovalDetail) error {
	ret := _m.Called(ctx, detail)

	if len(ret) == 0 {
		panic("no return value specified for ApproveDetail")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *domians.LoanApprovalDetail) error); ok {
		r0 = rf(ctx, detail)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Begin provides a mock function with given fields:
func (_m *DefaultLoanTransactionInterface) Begin() (loan.DefaultLoanTransactionInterface, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Begin")
	}

	var r0 loan.DefaultLoanTransactionInterface
	var r1 error
	if rf, ok := ret.Get(0).(func() (loan.DefaultLoanTransactionInterface, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() loan.DefaultLoanTransactionInterface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(loan.DefaultLoanTransactionInterface)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateLoan provides a mock function with given fields: ctx, _a1
func (_m *DefaultLoanTransactionInterface) CreateLoan(ctx context.Context, _a1 *domians.Loan) (*domians.Loan, error) {
	ret := _m.Called(ctx, _a1)

	if len(ret) == 0 {
		panic("no return value specified for CreateLoan")
	}

	var r0 *domians.Loan
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *domians.Loan) (*domians.Loan, error)); ok {
		return rf(ctx, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *domians.Loan) *domians.Loan); ok {
		r0 = rf(ctx, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domians.Loan)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *domians.Loan) error); ok {
		r1 = rf(ctx, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateLoanState provides a mock function with given fields: ctx, state
func (_m *DefaultLoanTransactionInterface) CreateLoanState(ctx context.Context, state *domians.LoanStateHistory) error {
	ret := _m.Called(ctx, state)

	if len(ret) == 0 {
		panic("no return value specified for CreateLoanState")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *domians.LoanStateHistory) error); ok {
		r0 = rf(ctx, state)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DisburseDetail provides a mock function with given fields: ctx, disbursed
func (_m *DefaultLoanTransactionInterface) DisburseDetail(ctx context.Context, disbursed *domians.LoanDisbursementDetail) error {
	ret := _m.Called(ctx, disbursed)

	if len(ret) == 0 {
		panic("no return value specified for DisburseDetail")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *domians.LoanDisbursementDetail) error); ok {
		r0 = rf(ctx, disbursed)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// End provides a mock function with given fields: err
func (_m *DefaultLoanTransactionInterface) End(err error) error {
	ret := _m.Called(err)

	if len(ret) == 0 {
		panic("no return value specified for End")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(error) error); ok {
		r0 = rf(err)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// InvestLoan provides a mock function with given fields: ctx, investLoan
func (_m *DefaultLoanTransactionInterface) InvestLoan(ctx context.Context, investLoan *domians.LoanInvestor) error {
	ret := _m.Called(ctx, investLoan)

	if len(ret) == 0 {
		panic("no return value specified for InvestLoan")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *domians.LoanInvestor) error); ok {
		r0 = rf(ctx, investLoan)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateLoan provides a mock function with given fields: ctx, _a1, updateData
func (_m *DefaultLoanTransactionInterface) UpdateLoan(ctx context.Context, _a1 *domians.Loan, updateData map[string]interface{}) error {
	ret := _m.Called(ctx, _a1, updateData)

	if len(ret) == 0 {
		panic("no return value specified for UpdateLoan")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *domians.Loan, map[string]interface{}) error); ok {
		r0 = rf(ctx, _a1, updateData)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewDefaultLoanTransactionInterface creates a new instance of DefaultLoanTransactionInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDefaultLoanTransactionInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *DefaultLoanTransactionInterface {
	mock := &DefaultLoanTransactionInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

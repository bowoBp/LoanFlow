// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	helper "github.com/bowoBp/LoanFlow/utils/helper"
	gin "github.com/gin-gonic/gin"
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// JwtInterface is an autogenerated mock type for the JwtInterface type
type JwtInterface struct {
	mock.Mock
}

// ExtractPayloadFromToken provides a mock function with given fields: requestToken
func (_m *JwtInterface) ExtractPayloadFromToken(requestToken string) (helper.JwtPayload, error) {
	ret := _m.Called(requestToken)

	if len(ret) == 0 {
		panic("no return value specified for ExtractPayloadFromToken")
	}

	var r0 helper.JwtPayload
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (helper.JwtPayload, error)); ok {
		return rf(requestToken)
	}
	if rf, ok := ret.Get(0).(func(string) helper.JwtPayload); ok {
		r0 = rf(requestToken)
	} else {
		r0 = ret.Get(0).(helper.JwtPayload)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(requestToken)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GenerateToken provides a mock function with given fields: id, userRole, userName, createdAt
func (_m *JwtInterface) GenerateToken(id uint, userRole string, userName string, createdAt time.Time) (string, error) {
	ret := _m.Called(id, userRole, userName, createdAt)

	if len(ret) == 0 {
		panic("no return value specified for GenerateToken")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(uint, string, string, time.Time) (string, error)); ok {
		return rf(id, userRole, userName, createdAt)
	}
	if rf, ok := ret.Get(0).(func(uint, string, string, time.Time) string); ok {
		r0 = rf(id, userRole, userName, createdAt)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(uint, string, string, time.Time) error); ok {
		r1 = rf(id, userRole, userName, createdAt)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// VerifyToken provides a mock function with given fields: c
func (_m *JwtInterface) VerifyToken(c *gin.Context) (string, error) {
	ret := _m.Called(c)

	if len(ret) == 0 {
		panic("no return value specified for VerifyToken")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(*gin.Context) (string, error)); ok {
		return rf(c)
	}
	if rf, ok := ret.Get(0).(func(*gin.Context) string); ok {
		r0 = rf(c)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(*gin.Context) error); ok {
		r1 = rf(c)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewJwtInterface creates a new instance of JwtInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewJwtInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *JwtInterface {
	mock := &JwtInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
